1. tar 打包文件
  -c: 建立压缩档案
  -x：解压
  -t：查看内容
  -r：向压缩归档文件末尾追加文件
  -u：更新原压缩包中的文件
  这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。

  -z：有gzip属性的
  -j：有bz2属性的
  -Z：有compress属性的
  -v：显示所有过程
  -O：将文件解开到标准输出
  -C: 解压到指定目录
  
  -f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名
  
  example:
    # tar -cf all.tar *.jpg       这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。
    # tar -rf all.tar *.gif       这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。
    # tar -uf all.tar logo.gif    这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。
    # tar -tf all.tar          这条命令是列出all.tar包中所有文件，-t是列出文件的意思
    # tar -xf all.tar          这条命令是解出all.tar包中所有文件，-x是解开的意思
    
  压缩
    tar –cvf jpg.tar *.jpg      将目录里所有jpg文件打包成tar.jpg
    tar –czf jpg.tar.gz *.jpg   将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz
    tar –cjf jpg.tar.bz2 *.jpg  将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2
    tar –cZf jpg.tar.Z *.jpg    将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z
    rar a jpg.rar *.jpg         rar格式的压缩，需要先下载rar for linux
    zip jpg.zip *.jpg           zip格式的压缩，需要先下载zip for linux 
  解压
    tar –xvf file.tar       解压 tar包
    tar -xzvf file.tar.gz   解压tar.gz
    tar -xjvf file.tar.bz2  解压 tar.bz2
    tar –xZvf file.tar.Z    解压tar.Z
    unrar e file.rar        解压rar
    unzip file.zip          解压zip


2. 查看文件大小
  du sh * 查看当前文件夹下内容
  du sh * folder_path 查看指定文件夹
  
  df 查看磁盘利用
  

3. copy
  cp -rf src_folder tgt_folder  拷贝文件夹


4. snap
  sudo snap install <snap name> # 安装一个snap包
  sudo snap remove <snap name>  # 删除一个snap包
  sudo snap refresh <snap name> # 更新一个snap包，如果你后面不加包的名字的话那就是更新所有的snap包
  sudo snap find <text to search> # 搜索要安装的snap包
  sudo snap revert <snap name>  # 把一个包还原到以前安装的版本
  sudo snap list    # 列出已经安装的snap包
  
  snap 安装后的启用命令在 /snap/bin/*
  
  
5. dpkg
  5.1. sudo dpkg -i <package.deb>  
          安装一个下载的 .deb 包

  5.2. sudo dpkg -c <package.deb>  
          列出 <package.deb> 的内容

  5.3. sudo dpkg -I <package.deb>  
          从 <package.deb> 中提取包裹信息

  5.4. sudo dpkg -r <package>      
          移除一个已安装的包裹

  5.5. sudo dpkg -P <package>      
          完全清除一个已安装的包裹。和 remove 不同的是，remove 只是删掉数据和可执行文件，purge 另外还删除所有的配制文件。

  5.6. sudo dpkg -L <package>      
          列出 <package> 安装的所有文件清单。同时请看 dpkg -c 来检查一个 .deb 文件的内容。

  5.7. sudo dpkg -s <package>      
          显示已安装包裹的信息。同时请看 apt-cache 显示 Debian 存档中的包裹信息，以及 dpkg -I 来显示从一个 .deb 文件中提取的包裹信息。

  5.8. sudo dpkg-reconfigure <package>   
          重新配制一个已经安装的包裹，如果它使用的是 debconf (debconf 为包裹安装提供了一个统一的配制界面)。

  如果安装过程中出现问题,可以先使用命令:
  sudo apt-get update
  更新后再执行上面的命令
  